
/******************************************************************************
В бутылке, стакане, кувшине и банке находятся молоко, лимонад, квас и вода. Известно, что вода и молоко не в бутылке, сосуд с лимонадом находится между кувшином и сосудом с квасом, в банке – не лимонад и не вода. Стакан находится около банки и сосуда с молоком. Как распределены эти жидкости по сосудам?
*******************************************************************************/
% Правила для проверки условий

% Вода и молоко не в бутылке
not_in_bottle(water).
not_in_bottle(milk).

% Сосуд с лимонадом находится между кувшином и сосудом с квасом
between_jug_and_kvass(lemonade).

% В банке не лимонад и не вода
not_in_jar(lemonade).
not_in_jar(water).

% Стакан находится около банки и сосуда с молоком
next_to_glass(jar, milk).
next_to_glass(glass, milk).

% Правило для проверки, что сосуды содержат разные жидкости
different_contents(X, Y) :- X \= Y.

% Правило для определения содержимого сосудов
solve([Bottle, Glass, Jug, Jar]) :-
    % Всего 4 сосуда
    length([Bottle, Glass, Jug, Jar], 4),
    
    % Условие: вода и молоко не в бутылке
    not_in_bottle(Bottle),
    
    % Условие: сосуд с лимонадом находится между кувшином и сосудом с квасом
    between_jug_and_kvass(Jug),
    
    % Условие: в банке не лимонад и не вода
    not_in_jar(Jar),
    
    % Условие: стакан находится около банки и сосуда с молоком
    next_to_glass(Glass, milk),
    next_to_glass(Glass, Jar),
    
    % Условие: все сосуды содержат разные жидкости
    different_contents(Bottle, Glass),
    different_contents(Bottle, Jug),
    different_contents(Bottle, Jar),
    different_contents(Glass, Jug),
    different_contents(Glass, Jar),
    different_contents(Jug, Jar).

% Вывод решения
write_solution([Bottle, Glass, Jug, Jar]) :-
    write('В бутылке - '), write(Bottle), nl,
    write('В стакане - '), write(Glass), nl,
    write('В кувшине - '), write(Jug), nl,
    write('В банке - '), write(Jar), nl.

% Вызов правила для поиска и вывода решения
find_solution(Solution) :- solve(Solution), write_solution(Solution).
